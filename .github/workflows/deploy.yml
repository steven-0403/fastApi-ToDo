name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Copy files via SSH
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        source: "."
        target: "~/fastapi-todo-app"

    - name: Debug - Check EC2 setup
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "=== Checking copied files ==="
          ls -la ~/fastapi-todo-app/
          echo "=== Checking Docker installation ==="
          docker --version || echo "Docker not found"
          docker-compose --version || echo "Docker Compose not found"
          echo "=== Checking Docker service ==="
          sudo systemctl status docker || echo "Docker service not running"

    - name: Deploy app via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd ~/fastapi-todo-app
          
          echo "=== Installing Docker Compose if needed ==="
          if ! command -v docker-compose &> /dev/null; then
            echo "Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          echo "=== Adding user to docker group ==="
          sudo usermod -aG docker ubuntu || true
          
          echo "=== Stopping existing containers ==="
          sudo docker-compose -f docker-compose-simple.yml down || true
          
          echo "=== Building and starting services ==="
          sudo docker-compose -f docker-compose-simple.yml up -d --build
          
          echo "=== Checking service status ==="
          sleep 10
          sudo docker-compose -f docker-compose-simple.yml ps

    - name: Show Access URLs
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "=================================="
          echo "🎉 DEPLOYMENT SUCCESSFUL!"
          echo "=================================="
          echo "Your application is now running at:"
          echo "🌐 Frontend: http://${{ secrets.EC2_HOST }}:80"
          echo "🔗 Backend API: http://${{ secrets.EC2_HOST }}:8080"
          echo "📚 API Docs: http://${{ secrets.EC2_HOST }}:8080/docs"
          echo "=================================="
          echo "📊 Container Status:"
          sudo docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          echo ""
          echo "📋 All Containers (including stopped):"
          sudo docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Image}}"
          echo ""
          echo "🔍 Container Logs (last 20 lines each):"
          echo "--- Frontend Logs ---"
          sudo docker logs --tail 20 fastapi-todo-app-frontend-1 2>/dev/null || echo "Frontend container not found"
          echo "--- Backend Logs ---"
          sudo docker logs --tail 20 fastapi-todo-app-backend-1 2>/dev/null || echo "Backend container not found"
          echo "--- Postgres Logs ---"
          sudo docker logs --tail 20 fastapi-todo-app-postgres-1 2>/dev/null || echo "Postgres container not found"
          echo "--- Redis Logs ---"
          sudo docker logs --tail 20 fastapi-todo-app-redis-1 2>/dev/null || echo "Redis container not found"
          echo "=================================="
          echo "🔧 If containers are stopped, restart with:"
          echo "   cd ~/fastapi-todo-app && sudo docker-compose -f docker-compose-simple.yml up -d"
          echo "=================================="

    - name: Restart App if Containers Stopped
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd ~/fastapi-todo-app
          echo "🔄 Ensuring all containers are running..."
          sudo docker-compose -f docker-compose-simple.yml up -d
          sleep 5
          echo "📊 Final Container Status:"
          sudo docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
